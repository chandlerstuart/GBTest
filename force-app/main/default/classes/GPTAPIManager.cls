/*
Name:  GPTAPIManager
======================================================
======================================================
Purpose:
-------
Manager class for handling the integrations with OpenAI's apis.
======================================================
======================================================


History
------- 
Ver. Author        Date        Detail
1.0  J Radcliffe   2023-10-10  Initial development.
1.1  Mark Cane&    2023-11-28  Added askGPT(List<GPTMessage> messages) overload to avoid compile errors in dependent class (gptAIReplyController).
*/
public with sharing class GPTAPIManager {

    public class CustomException extends Exception{}

    public static final String GPTModel = 'gpt-3.5-turbo';
    public static String API_KEY;
    public static final String API_KEY_METADATA_DEVELOPER_NAME = 'OpenAI';

    public class GPTMessage{
        @AuraEnabled public String role;//e.g. System, Assistant or User
        @AuraEnabled public String content;// Prompt message
        public GPTMessage(){}
    }

    public class GPTAPIResponse{
        @AuraEnabled public String id;//Conversation Id
        @AuraEnabled public List<GPTChoice> choices;
    }

    public class GPTAPIRequest{
        public String model;// = GPTModel;
        public List<GPTMessage> messages;
        public Decimal temperature = 1; //This parameter controls the randomness of the output. A higher value (e.g., 0.8) makes the output more diverse and creative, while a lower value (e.g., 0.2) makes it more deterministic and focused.
        public Integer top_p = 1; //The top_p parameter controls the diversity of the generated text by selecting from a subset of the most likely next tokens. It sets a threshold for the cumulative probability of the generated tokens. A smaller value (e.g., 0.2) will make the output more focused, while a larger value (e.g., 0.8) will make it more diverse.
        public Integer n = 1;// The n parameter specifies the number of responses to generate. You can use it to request multiple alternative completions from the model.
        public Boolean stream = false; //When set to true, the API will return a continuous stream of responses as they are generated by the model. This can be useful for real-time applications where you want to receive responses as soon as they are available.
        public Integer max_tokens = 500; //limits the length of the response to a specified number of tokens. You can use it to control the length of the generated output.
        public Integer presence_penalty = 0; //Presence penalty is a value that can be adjusted to encourage or discourage the model from including repetitive phrases in the response. A higher value (e.g., 0.8) discourages repetition, while a lower value (e.g., 0.2) allows for more repetition.
        public Integer frequency_penalty = 0; //Frequency penalty is a value that can be adjusted to encourage or discourage the model from using infrequent words or phrases in the response. A higher value (e.g., 0.8) discourages the use of rare words, while a lower value (e.g., 0.2) allows for more diversity in word choice.
    }

    public class GPTChoice{
        @AuraEnabled public Integer index;
        @AuraEnabled public GPTMessage message;//Response message
    }

    public static List<GPTMessage> askGPT(List<GPTMessage> messages){//1.1+
        return askGPT(messages, false);
    }

    public static List<GPTMessage> askGPT(List<GPTMessage> messages, Boolean logAPIFailures){

        if(logAPIFailures == null) logAPIFailures = false;
        
        if(messages == null || messages.size()==0) return null;

        if(API_KEY == null){
            try{
                API_KEY = [Select Id, Value__c From APIKey__mdt Where DeveloperName = :API_KEY_METADATA_DEVELOPER_NAME].Value__c;
            }catch(Exception e){
                system.debug('Oops! Unexpected failure > '+e.getMessage()+'-'+e.getStackTraceString());
                throw new CustomException('Failed to identify api key. Please contact the Salesforce Team if you require assistance.');
            }
        }

        system.debug('Messages > '+JSON.serialize(messages));

        GPTAPIRequest gptReqBody = new GPTAPIRequest();
        gptReqBody.messages = messages;
        gptReqBody.model = 'gpt-3.5-turbo';
        String jsonBody = JSON.serialize(gptReqBody);
        system.debug(jsonBody);

        Http http = new http();
        HttpRequest req = new HttpRequest();
        req.setEndpoint('callout:OpenAI'+'/v1/chat/completions');
        req.setBody(jsonBody);
        req.setMethod('POST');
        req.setHeader('Content-Type', 'application/json');
        req.setHeader('Authorization', 'Bearer ' + API_KEY);
        req.setTimeout(60000);//Max 1 minute wait time

        HttpResponse res = http.send(req);
        if(res.getStatusCode() == 200 && res.getBody() != null && res.getBody().length()>0){
            GPTAPIResponse gptRes = (GPTAPIResponse)JSON.deserialize(res.getBody(), GPTAPIResponse.class);
            messages.add(gptRes?.choices[0].message);
        }else{

            if(logAPIFailures == true) Golfbreaks.PlatformLogManager.logCustomMessage('Error details: API response status code: '+res.getStatusCode()+'. Response body: '+res.getBody(),'Open AI GPT Failure','GPTAPIManager','askGPT',null);
            system.debug('whoops! There was a failure: '+res.getBody());
            throw new CustomException('whoops! There was a failure: ['+res.getStatusCode()+'] '+res.getBody());
        }

        return messages;
    }

    //Remove personally identifiable information from the content. This can be used before calling openAI to ensure no private details are shared.
    public static String de_identifyContent(String content){

        if(content == null) return null;

        system.debug('Content before de-identification > '+content);

        Map<String, String> regexReplacements = new Map<String, String> {
            
            // Email addresses: Replace with "******@******.***"
            '[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}' => '******@******.***',

            // Phone numbers (UK and USA): Replace with "***-***-****" or "(***) ***-****"
            '(\\(?(\\d{3})\\)?)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}' => '***-***-****',

            // Account numbers: Replace with "**********"
            '\\b\\d{10,16}\\b' => '**********',

            // Postcodes (USA and UK): Replace with "*****" or "**** ***"
            '\\b\\d{5}(?:-\\d{4})?\\b' => '******',
            '[A-Z]{1,2}\\d{1,2}[A-Z]?\\s*\\d[A-Z]{2}' => '**** ***',

            // Credit card numbers: Replace with "****-****-****-****"
            '\\b\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4}\\b' => '****-****-****-****',

            // Social Security Numbers (USA): Replace with "***-**-****"
            '\\b\\d{3}[-]\\d{2}[-]\\d{4}\\b' => '***-**-****',

            // IP Addresses: Replace with "***.***.*.**"
            '\\d{1,3}(?:\\.\\d{1,3}){3}' => '***.***.*.**'
        };
    
        for (String regex : regexReplacements.keySet()) {
            content = content.replaceAll(regex, regexReplacements.get(regex));
        }
    
        System.debug('Content after de-identification > ' + content);
        
        return content;

    }

}